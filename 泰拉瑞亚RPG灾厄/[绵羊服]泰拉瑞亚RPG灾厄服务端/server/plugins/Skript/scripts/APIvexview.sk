import:
	java.util.ArrayList
	java.util.HashMap
	lk.vexview.api.VexViewAPI
	lk.vexview.gui.components.VexButton
	lk.vexview.gui.components.VexScrollingList
	lk.vexview.gui.components.VexSlot
	lk.vexview.gui.components.VexText
	lk.vexview.gui.VexGui
	lk.vexview.hud.VexImageShow
	lk.vexview.hud.VexTextShow
	org.bukkit.block.Block
	org.bukkit.Bukkit

command /toggleSprite:
	trigger:
		set {_ply} to command sender
		if {_ply} has scoreboard tag "useLocalSprite":
			remove "useLocalSprite" from scoreboard tags of {_ply}
			set metadata "GUIbackground" of {_ply} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/1/1e/Hallow_background_2.png"
			set metadata "GUIbackgroundNPC" of {_ply} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/f/fc/Offline_Sapphire_Gemspark_Wall_%%28placed%%29.png"
			send "&e您正在使用泰拉瑞亚wiki网页提供的贴图；如果出现&c贴图无法加载&e的问题，请加群并下载修复包（内附使用说明）。" to {_ply}
		else:
			add "useLocalSprite" to scoreboard tags of {_ply}
			set metadata "GUIbackground" of {_ply} to "[local]GuiBG.png"
			set metadata "GUIbackgroundNPC" of {_ply} to "[local]GuiNPCBG.png"
			send "&e您正在使用本地贴图；如果出现&c贴图无法加载&e的问题，请加群并下载修复包（内附使用说明）或输入&d/toggleSprite&e来尝试使用泰拉瑞亚wiki网页提供的贴图。" to {_ply}

function displayIconHud(ply: player, refreshHealth: boolean, refreshMana: boolean):
	set {_attrMap} to metadata "attrMap" of {_ply}
	{_attrMap} is set

	set {_maxHealth} to {_attrMap}.get("maxHealth")
	set {_maxMana} to {_attrMap}.get("maxMana")
	if gamemode of {_ply} is spectator:
		set {_health} to 0
	else:
		set {_health} to health of {_ply}
	set {_mana} to level of {_ply}
	set {_windowWidth} to try VexViewAPI.getPlayerClientWindowWidth({_ply})
	set {_displayList} to new ArrayList()
	if {_maxHealth} <= 800:
		set {_goldenHearts} to 0
		set {_allHearts} to ceil({_maxHealth} / 40)
	else if {_maxHealth} <= 1000:
		set {_goldenHearts} to ceil(({_maxHealth} - 800) / 10)
		set {_allHearts} to 20
	else:
		set {_goldenHearts} to ceil({_maxHealth} / 50)
		set {_allHearts} to {_goldenHearts}
	
	if {_refreshHealth} is true:
		set {_xOffset} to {_windowWidth} - (11 * 13)
		set {_yOffset} to 17
		set {_drewHealth} to 0
		set {_switchLine} to 10
		set {_text} to new ArrayList()
		{_text}.add("生命： %round({_health})%/%max health of {_ply}%")
		set {_hud} to new VexTextShow("HealthDisplayNumber", {_xOffset}, 5, {_text}, 0, 1.4)
		VexViewAPI.sendHUD({_ply}, {_hud})
		if metadata "heartsDrew" of {_ply} is not set:
			set {_loopTime} to {_allHearts}
		else:
			set {_loopTime} to max({_allHearts}, (metadata "heartsDrew" of {_ply}))
		set metadata "heartsDrew" of {_ply} to {_allHearts}
		loop {_loopTime} times:
			if loop-number <= {_allHearts}:
				if {_drewHealth} >= {_health}:
					if {_ply} has scoreboard tag "useLocalSprite":
						set {_Url} to "[local]heart_empty.png"
					else:
						set {_Url} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/a/a8/Heart_%%28empty%%29.png"
					set {_sideLength} to 8
				else:
					if {_goldenHearts} > 0:
						remove 1 from {_goldenHearts}
						set {_weight} to 50
						if {_ply} has scoreboard tag "useLocalSprite":
							set {_Url} to "[local]heart2.png"
						else:
							set {_Url} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/5/51/PlayerHeart2.png"
					else:
						set {_weight} to 40
						if {_ply} has scoreboard tag "useLocalSprite":
							set {_Url} to "[local]heart.png"
						else:
							set {_Url} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/3/3d/PlayerHeart.png"
					add {_weight} to {_drewHealth}
					if {_drewHealth} <= health of {_ply}:
						set {_sideLength} to 11
					else:
						set {_sideLength} to ({_weight} - {_drewHealth} + health of {_ply}) * 3 / {_weight} + 8
				set {_hud} to new VexImageShow("HealthDisplay~%loop-number%", {_Url}, ({_xOffset} + (11 - {_sideLength}) / 2), ({_yOffset} + (11 - {_sideLength}) / 2), {_sideLength}, {_sideLength}, {_sideLength}, {_sideLength}, 0)
				VexViewAPI.sendHUD({_ply}, {_hud})
				remove 1 from {_switchLine}
				add 13 to {_xOffset}
				if {_switchLine} <= 0:
					set {_xOffset} to {_windowWidth} - (11 * 13)
					add 15 to {_yOffset}
					set {_switchLine} to 10
			else:
				VexViewAPI.removeHUD({_ply}, "HealthDisplay~%loop-number%")
	if {_refreshMana} is true:
		set {_allStars} to ceil({_maxMana} / 20)
		set {_xOffset} to {_windowWidth} - 13
		set {_yOffset} to 4
		set {_drewMana} to 0
		if metadata "starsDrew" of {_ply} is not set:
			set {_loopTime} to {_allStars}
		else:
			set {_loopTime} to max({_allStars}, (metadata "starsDrew" of {_ply}))
		set metadata "starsDrew" of {_ply} to {_allStars}
		if {_ply} has scoreboard tag "useLocalSprite":
			set {_Url} to "[local]star.png"
		else:
			set {_Url} to "https://static.wikia.nocookie.net/terraria_gamepedia/images/e/ed/Mana.png"
		loop {_loopTime} times:
			if loop-number <= {_allStars}:
				if {_drewMana} >= {_mana}:
					set {_sideLength} to 5
				else:
					add 20 to {_drewMana}
					if {_drewMana} <= {_mana}:
						set {_sideLength} to 11
					else:
						set {_sideLength} to (20 - {_drewMana} + {_mana}) * 0.15 + 8
				set {_hud} to new VexImageShow("ManaDisplay~%loop-number%", {_Url}, ({_xOffset} + (11 - {_sideLength}) / 2), ({_yOffset} + (11 - {_sideLength}) / 2), {_sideLength}, {_sideLength}, {_sideLength}, {_sideLength}, 0)
				VexViewAPI.sendHUD({_ply}, {_hud})
				add 13 to {_yOffset}
			else:
				VexViewAPI.removeHUD({_ply}, "ManaDisplay~%loop-number%")

function handleCrafting(ply: player, block: object):
	set {_motherNode} to metadata "craftingStation" of {_ply}
	if {_motherNode} is not "CLOSED":
		if VexViewAPI.getPlayerCurrentGui({_ply}) is not set:
			set metadata "craftingStation" of {_ply} to "CLOSED"
		else:
			stop trigger
	set {_level} to 1
	if {_block} is a block:
		set {_inv} to try {_block}.getState().getInventory()
		set {_name} to trimText({_inv}.getTitle().toString())
		set {_block} to {_block}.getType()
		if {_name} is "地狱熔炉":
			set {_level} to 2
		else if {_name} is "钛金熔炉" or "精金熔炉":
			set {_level} to 3
		else if {_name} is "山铜砧" or "秘银砧":
			set {_level} to 2
			set {_block} to "ANVIL"
		else if {_name} is "工匠合成台":
			set {_level} to 1
			set {_block} to "TINKER_WORKBENCH"
		else if {_name} is "远古操纵机":
			set {_level} to 1
			set {_block} to "远古操纵机"
		if "%{_block}%" is "FURNACE":
			{_name} doesn't end with "炉"
			stop trigger
	set {_gui} to {CraftingGUI}.get("%{_block}%_%{_level}%")
	{_gui} is set
	set metadata "craftingStation" of {_ply} to {_block}
	set {_windowWidth} to try VexViewAPI.getPlayerClientWindowWidth({_ply})
	set {_windowHeight} to try VexViewAPI.getPlayerClientWindowHeight({_ply})
	set {_guiOpen} to new VexGui((metadata "GUIbackground" of {_ply}), {_windowWidth} / 4, 0, {_windowWidth} / 2, {_windowHeight} * 0.75)
	set {_comps} to {_gui}.getComponents().clone()
	set {_SL} to {_gui}.getList()
	{_comps}.remove({_SL})
	
	if {_ply} is sneaking:
		set {_showAll} to true
	else if {_block} is "AIR":
		set {_showAll} to true
	else:
		set {_showAll} to false
	if {_showAll}:
		set {_SLNew} to new VexScrollingList(({_guiOpen}.getWidth() * 0.1), 17, 26, ({_guiOpen}.getHeight() - 34), {_SL}.getFullHeight())
		set {_iterator} to {_SL}.getComponents().iterator()
		while {_iterator}.hasNext() is true:
			{_SLNew}.addComponent({_iterator}.next())
		{_comps}.add({_SLNew})
	else:
		send "&a提示：潜行右键合成站点时会显示所有配方哦~" to {_ply}
		set {_itemAvaliable} to new HashMap(10)
		loop 36 times:
			set {_item} to slot (loop-number - 1) of {_ply}'s inventory
			set {_nameItem} to name of {_item}
			if {_nameItem} contains "的 ":
				set {_type} to {_nameItem}.split("的 ")[1]
			else:
				set {_type} to trimText({_nameItem})
			if {_itemAvaliable}.containsKey({_type}):
				{_itemAvaliable}.put({_type}, {_item}.getAmount() + ({_itemAvaliable}.get({_type})))
			else:
				{_itemAvaliable}.put({_type}, {_item}.getAmount())
		set {_items} to new ArrayList(20)
		set {_indexes} to new ArrayList(20)
		set {_nodes::*} to yml nodes "%{_block}%" from file "plugins/Data/recipes.yml"
		set {_loopTotal} to size of {_nodes::*}
		loop {_nodes::*}:
			set {_levelRequirement} to yml value "%{_block}%.%loop-value%.requireLevel" from file "plugins/Data/recipes.yml"
			{_levelRequirement} <= {_level}
			set {_ingredient} to yml value "%{_block}%.%loop-value%.requireItem" from file "plugins/Data/recipes.yml"
			set {_iterator} to {_ingredient}.iterator()
			set {_canAdd} to true
			set {_itemsInInv} to {_itemAvaliable}.clone()
			while {_iterator}.hasNext():
				set {_info} to {_iterator}.next()
				if {_info} contains ":":
					set {_requireItem} to {_info}.split(":")[0]
					set {_amount} to {_info}.split(":")[1] parsed as integer
				else:
					set {_requireItem} to {_info}
					set {_amount} to 1
				if {_itemsInInv}.getOrDefault({_requireItem}, 0) < {_amount}:
					set {_canAdd} to false
					stop loop
				{_itemsInInv}.put({_requireItem}, {_itemsInInv}.get({_requireItem}) - {_amount})
			if {_canAdd}:
				set {_result} to yml value "%{_block}%.%loop-value%.resultItem" from file "plugins/Data/recipes.yml"
				{_items}.add(getRawItem({_result}))
				{_indexes}.add(loop-value parsed as integer)
		set {_SLNew} to new VexScrollingList(({_guiOpen}.getWidth() * 0.1), 17, 26, ({_guiOpen}.getHeight() - 34), {_items}.size() * 20)
		set {_index} to 0
		set {_iterator} to {_items}.iterator()
		set {_iteratorInd} to {_indexes}.iterator()
		while {_iterator}.hasNext() is true:
			{_SLNew}.addComponent(new VexSlot({_iteratorInd}.next(), 5, ({_index} * 20), {_iterator}.next()))
			add 1 to {_index}
		{_comps}.add({_SLNew})
	
	set {_btn1} to {_gui}.getButtonById("CRAFT")
	{_comps}.remove({_btn1})
	{_comps}.add(new VexButton("CRAFT", "选择配方", (metadata "GUIbackground" of {_ply}), (metadata "GUIbackground" of {_ply}), {_guiOpen}.getWidth() - 120, {_guiOpen}.getHeight() - 50, 35, {_gui}.getButtonById("CRAFT").getH()))
	set {_btn2} to {_gui}.getButtonById("CRAFT_ALL")
	{_comps}.remove({_btn2})
	{_comps}.add(new VexButton("CRAFT_ALL", "选择配方", (metadata "GUIbackground" of {_ply}), (metadata "GUIbackground" of {_ply}), {_guiOpen}.getWidth() - 60, {_guiOpen}.getHeight() - 50, 35, {_gui}.getButtonById("CRAFT").getH()))
	{_guiOpen}.addAllComponents({_comps})
	VexViewAPI.openGui({_ply}, {_guiOpen})